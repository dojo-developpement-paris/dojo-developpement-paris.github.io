#!/usr/bin/env sh

if has cachix; then
    cachix use pinage404-nix-sandboxes
    cachix use git-gamble
fi

export NIX_CONFIG="extra-experimental-features = flakes nix-command"

git add --intent-to-add flake.nix flake.lock

strict_env

if ! has direnv_version || ! direnv_version 2.29.0; then
    log_error "Your DirEnv version is too old and may not work ; Please upgrade"
fi

use flake

# use flake "gitlab:pinage404/git-gamble?rev=06f50aeb39227e0cc901978a14a27bb9a935c958&dir=/packaging/nix/flake/"

eval "$(devbox generate direnv --print-envrc)"

mask install

# https://github.com/direnv/direnv/issues/592
layout_poetry() {
    PYPROJECT_TOML="${PYPROJECT_TOML:-pyproject.toml}"
    if [[ ! -f "$PYPROJECT_TOML" ]]; then
        log_status "No pyproject.toml found. Executing \`poetry init\` to create a \`$PYPROJECT_TOML\` first."
        poetry init
    fi

    if [[ -d ".venv" ]]; then
        VIRTUAL_ENV="$(pwd)/.venv"
    else
        VIRTUAL_ENV=$(
            poetry env info --path 2>/dev/null
            true
        )
    fi

    if [[ -z $VIRTUAL_ENV || ! -d $VIRTUAL_ENV ]]; then
        log_status "No virtual environment exists. Executing \`poetry install\` to create one."
        poetry install
        VIRTUAL_ENV=$(poetry env info --path)
    fi

    PATH_add "$VIRTUAL_ENV/bin"
    export POETRY_ACTIVE=1
    export VIRTUAL_ENV
}

layout poetry

export GAMBLE_TEST_COMMAND="sh -c 'mask format && mask lint && mask test'"
